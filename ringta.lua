--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,x)local x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=112,71,42,75,67,93,18,68,59,64,50,84,54,86,42,80,26,72,52,83,77,38,67,65,28,52,50,33,31,31,48,82,82,64,82,30,98,34,76,25,90,84,96,64,74,54,17,25,40,50,37,69 while x~=65 do if y>=841 then if y<=1191 then if y<=988 then if y<=888 then if y<879 then do bd=''end y=888 else bo=(2^52)y=916 end else if y>=947 then if y>949 then for cm=1,31 do cf[cm]=bl bl=(bl*2)end y=1028 else y=988 bl=2 end else y=947 cf={[0]=1}end end else if y<=1081 then if y<=1028 then bz=function(cm,cn,co,cp)local cp,cq,cr=54,63,71,11,39,62,12,36,94,32,12,31,81,24,44 while cp~=29 do if cq>=168 then if cq<=168 then cr=(cr-cr%1)cq=205 else if cq>207 then break else cq=251 return cr end end else if cq>=112 then if cq>115 then cr=((cn/cf[cm])%cf[co])cq=168 else cr=nil cq=132 end else cr=nil cq=112 end end end end y=1058 else if y>1060 then bx=function(cm,cn,co,cp,cp)local cp cp=((cm/2^(cn-a))%2^((co-1)-(cn-1)+1))return(cp-cp%1);end y=1121 else bs=(bit_lib and bit_lib.bxor or function(a,cm)a=a%(2^32)cm=cm%(2^32)local cn,co=0,1 while a>0 and cm>0 do local cp,cq=a%16,cm%16 cn=cn+ba[cp+1][cq+1]*co a=(a-cp)/16 cm=(cm-cq)/16 co=co*c end cn=cn+a*co+cm*co return cn end)y=1081 end end else if y<=1121 then y=1156 bv=1 else if y>1160 then bn=function()local a a=bw(ce,bv,bv)bv=(bv+1);return a;end y=1230 else bt=function()local a,c,cm,cn do cm,a,c,cn=bw(ce,bv,(bv+3))end bv=(bv+4);return((cn*16777216)+(c*65536)+(a*256)+cm);end y=1191 end end end end else if y>=1409 then if y<=1455 then if y<=1409 then bc=function(a,c,c)local c,cm,cn,co,cp,cq,cr,cs=74,64,76,50,27,65,74,74,33,90,77,67,59,72,65,73,49,66,16,35,26,60,12 while c~=40 do if cm>=350 then if cm>=523 then if cm>=568 then if cm>=603 then if cm>611 then c=40;else cm=619 return cp;end else cm=603 cp[170]=cr;end else if cm<533 then cp[22]=co;cm=539 else cm=568 for c=1,bt()do cr[c-1]=bc();end end end else if cm<=394 then if cm<388 then cm=394 for c=1,cq do local ct,cu,cv,cw=41,63,51,92,85,64,29,43,82,75,94,18,47,42 while ct~=30 do if cu<=108 then if cu>=93 then if cu<99 then cu=108 cw=bn()else cu=133 do cv=nil end end else cu=93 cv,cw=nil end else if cu<=133 then cu=178 if(1==cw)then cv=(0~=bn());elseif(2==cw)then cv=cj();elseif(3==cw)then cv=bp();elseif(4==cw)then cv=a[bp()];end;else if cu>183 then ct=30;else cu=212 cs[c]=cv;end end end end end else do cp[57]=cs end cm=438 end else if cm>440 then cm=523 for a=1,bt()do local c,ct,cu,cv,cw,cx=49,32,76,18,35,15,15,24,12,65,68,74,85,94,75,31,50,18,97,66,42,32,84,98,32 while c~=38 do if ct<=289 then if ct>=161 then if ct>=221 then if ct<=221 then ct=267 cu=bt()else if ct>274 then ct=335 do cw[65]=cx end else do cx=bx(cv,1,2)end ct=289 end end else if ct>163 then ct=221 cv=bt()else if not(bn()~=1)then for cy=1,bn()do cw[121][cy]={bn()==0,bt()}end end ct=200 end end else if ct<=63 then if ct>36 then ct=85 do cw={{},nil}end else ct=63 cu,cv,cw,cx=nil end else if ct>91 then cw[121]={};ct=161 else ct=127 do cw[33]=bn();end end end end else if ct<=445 then if ct<=372 then if ct<364 then cw[136]=bx(cu,1,11);ct=372 else ct=412 do cw[149]=bx(cv,3,11);end end else if ct>419 then ct=473 do cw[60]=bx(cv,21,29);end else ct=445 cw[199]=bx(cu,12,33);end end else if ct<=510 then if ct>479 then cw[48]=-cw[149]ct=559 else ct=510 cw[51]=bx(cv,12,20);end else if ct>=586 then if ct<625 then ct=627 co[a]=cw;else c=38;end else ct=586 cw[32]=-cw[60]end end end end end end else cm=474 cp[101]=bn();end end end else if cm<=160 then if cm<=82 then if cm<76 then cn,co,cp,cq,cr,cs=nil cm=82 else co={}cm=124 end else if cm<158 then cm=160 do cr={}end else cm=206 cp={}end end else if cm>=279 then if cm<313 then cm=316 cq=bt()else cm=350 cs={}end else if cm>215 then cm=279 for a=(#bq+1),(#bq+cn)do local c,co,cp,cq,cr=67,34,85,83,34,64,65,72,16,96,69,35,17,53,82,82,50,98,76,77,27,86 while c~=53 do if co<=250 then if co>=175 then if co>=222 then if co>231 then co=279 cp[136]=bx(cr,1,11);else co=250 cp[65]=bx(cq,1,2);end else if co>178 then co=222 cp[51]=bn();else cr=bt()co=191 end end else if co<=56 then if co>43 then co=105 cp={}else cp,cq,cr=nil co=56 end else if co<133 then cp[33]=bn();co=137 else co=175 cq=bt()end end end else if co>=387 then if co<=427 then if co<424 then co=427 do cp[48]=-cp[149]end else cp[32]=-cp[60]co=466 end else if co>469 then break else co=493 bq[a]=cp;end end else if co>=335 then if co>342 then cp[d]=bx(cr,12,33);co=387 else co=368 cp[60]=bx(cq,21,29);end else if co>286 then do cp[177]=bx(cq,12,20);end co=335 else cp[149]=bx(cq,3,11);co=296 end end end end end end else cm=231 cn=bt()end end end end end end y=1438 else if y>1445 then ck={}y=1484 else y=1455 bg={}end end else if y<=1484 then y=1517 bj=function(a,c,d,cm,cm,cm)local cm,cn,co,cp,cq cm=a[170]co=a[22]cn=a[101]do cp=bg end cq=a[57]return function(...)local a,cp,cr,cs,ct,cu,cv,cw,cx ct=1 cx=-1 cr=-1 cw={}a={...}cs=(br('#',...)-1)cu={}cp={}for cr=0,cs do if(not(cr<cn))then do cw[(cr-cn)]=a[(cr+1)];end else cp[cr]=a[(cr+1)];end;end;cv=(cs-cn+1)while true do local cr,cv,cy,cz,da,db,dc,dd,de,df db=co[ct]dd=db[136]cz=db[33]de=db[149]cr=db[177]df=db[h]da=db[51]dc=db[48]do cy=db[199]end cv=db[32]if not(dd>51)then if not(dd<26)then if not(dd>38)then if not(dd<32)then if not(dd>34)then if not(dd>32)then cp[db[149]]=c[cy];else if not(dd~=33)then local h,cz,dg dg=de h=cp[dg]cz=db[199]for dh=1,cz do do h[dh]=cp[(dg+dh)]end end;else local h h=de cp[h]=cp[h](cp[h+1]);end end else do if not(db[136]>36)then if 35==dd then local h do h={}end do if(#cu>0)then for cz=1,#cu do local dg dg=cu[cz]for cz=0,#dg do local dh,di,dj dj=dg[cz]do di=dj[1]end dh=dj[2]if(di==cp and dh>=0)then h[dh]=di[dh]dj[1]=h end end end end end return false,0;else local h,cz,dg,dh do dh=de end do cz,h=cl(cp[dh](cp[(dh+1)]))end cx=(h+dh-1)dg=0 do for h=dh,cx do dg=(dg+1);cp[h]=cz[dg];end;end end else if(db[136]<38)then if(not(cp[db[149]]>cp[df]))then ct=cy;end;else end end end end else if not(dd<29)then if not(dd<30)then do if(dd<31)then do co[ct]={[149]=0,[51]=0,[60]=0,[199]=3,[136]=dd- -5};end ct=(ct-1);else local h,cz cz=cy h=cp[cz]do for dg=(cz+1),df do h=(h..cp[dg]);end;end cp[de]=h;end end else end else if not(dd>26)then cp[db[db[149]]]=cp else if(dd<28)then c[cy]=cp[db[149]];else cp[de]=(cp[cy]*cp[db[60]]);end end end end else if not(dd<45)then if not(dd<48)then do if not(dd>49)then if(dd>48)then cp[de]=(not cp[cy]);else do bg[db[149]]()end end else if(dd<51)then cp[de]=#cp[cy];else bg[de]={}end end end else if not(dd<46)then if not(dd~=46)then local h,cz,dg,dh dh=de do h=((df-1)*50)end dg=cp[dh]do cz=db[199]end for di=1,cz do dg[(h+di)]=cp[(dh+di)]end;else cp[de]=cp[cy][cq[df]];end else local h,cz,dg do dg=de end h={cp[dg](cp[dg+1])}cz=0 do for dh=dg,df do cz=(cz+1);cp[dh]=h[cz];end end end end else if not(dd>41)then if not(dd<40)then if(db[136]<41)then local h,cz h=de cz=cp[db[199]]cp[(h+1)]=cz;cp[h]=cz[cp[db[60]]];else cp[cv]();end else cp[de]=cp[cy]end else if not(dd>42)then cp[de]=(cp[cy]+cp[df]);else if(dd>43)then do cp[de]=cp[cy][cp[df]];end else ct=((cq[de]~=cq[df])and cy or ct)end end end end end else if not(db[136]<i)then do if not(dd<19)then do if not(db[136]<22)then do if not(dd>23)then if(db[136]<23)then local h,i h=de i={}if(#cu>0)then for cz=1,#cu do local dg dg=cu[cz]for cz=0,#dg do local dh,di,dj di=dg[cz]dh=di[1]dj=di[2]if(dh==cp and dj>=0)then do i[dj]=dh[dj]end di[1]=i end end end end return cp[h],cp[(h+1)]else cp[de]=(0~=cy);do ct=(ct+m);end end else if(dd>24)then co[ct]=bq[da];ct=cy;else local h,i,m i=cm[cy]h=nil m={}h=cg({},{__index=function(cz,cz)local cz=m[cz];return cz[1][cz[2]];end,__newindex=function(cz,cz,dg)local cz=m[cz]cz[1][cz[2]]=dg;end;});for cz=1,df do local dg dg=db[121][cz]if dg[1]then m[(cz-1)]={cp,dg[2],nil,nil};else m[(cz-1)]={c,dg[2],nil,nil,nil};end;cu[(#cu+1)]=m;end;cp[de]=bj(i,h,d);end end end else do if not(dd<20)then if not(dd~=20)then local c,h,i,m,cz i=de do h=db[60]end m=(i+2)c={cp[i](cp[i+1],cp[m])}do for dg=1,h do cp[(m+dg)]=c[dg]end end cz=cp[(i+3)]if cz then cp[m]=cz else do ct=cy;end end;else ct=((cp[de]~=cp[df])and cy or ct)end else local c,h,i c=de i=cp[(c+2)]do h=(cp[c]+i)end cp[c]=h;if((i>0))then do if(not(h>cp[c+1]))then ct=cy;do cp[(c+3)]=h;end end end elseif(not(h<cp[c+1]))then ct=cy;do cp[(c+3)]=h;end end end end end end else if not(dd<16)then if not(dd>16)then cp[db[149]]=(not(cy==0));else if(dd<18)then co[ct]={[60]=2,[51]=0,[199]=3,[149]=1,[k]=dd- -82};ct=(ct-1);else cp[de][cp[db[199]]]=cp[db[60]];end end else if not(dd>13)then local c,h,i,k k=de c,h=cl(cp[k](cc(cp,(k+1),db[199])))cx=(h+k-1)do i=g end for g=k,cx do i=(i+1);cp[g]=c[i];end;else if(dd>14)then cq=bg[db[149]](cq)else do return cp[dc][da]end end end end end end else if not(dd>5)then if not(dd<3)then if not(dd>3)then do cp[de]=bg[cr]end else if(dd<5)then local c c=cp[dc][da]cp[dc][db[51]]=(c..cp[df]);else if(not(cp[de]<cp[df]))then ct=cy;end;end end else do if not(dd<1)then do if(dd<o)then local c c=db[149]do return cc(cp,c,(c+cy))end;else co[ct]={[136]=dd- -93,[199]=1,[60]=0,[w]=0,[51]=0};ct=(ct-1);end end else d[cq[cy]]=cp[de];end end end else do if not(db[136]<9)then if not(dd>10)then if not(db[136]~=9)then local c,g,h g=de c={cp[g](cc(cp,g+1,cy))}h=0 do for i=g,df do h=(h+1);cp[i]=c[h];end end else cp[db[149]]=(cp[cy]-cp[df]);end else if(dd<12)then ct=cy;else local c c=de cp[c](cp[(c+1)])end end else do if not(dd>6)then cp[de]={};else if 7==dd then local c,g,h,i h=de do g={cp[h]()}end i=df do c=0 end for k=h,i do c=(c+1);cp[k]=g[c];end else cp[cv]=(function()cp[de]=bj(cm[cr],nil,d);end)end end end end end end end end else do if not(dd>77)then if not(dd<65)then if not(dd<71)then if not(dd<74)then do if not(dd<76)then if(db[136]>76)then ct=((cp[de]==cp[df])and cy or ct)else local c,g g=de c=cp[cy]cp[(g+1)]=c;cp[g]=c[cq[df]];end else do if(dd<75)then do return cp[de]end else local c c=de do do return cp[c](cc(cp,(c+1),cy))end;end end end end end else if not(dd<72)then if(dd>72)then cp[de]=nil;else bg[de]=bg[cr]end else if((cp[de]>cp[df]))then ct=cy;end;end end else if not(db[136]<68)then if not(dd<69)then if(dd>69)then for c=de,db[l]do cp[c]=nil;end;else cp[de][cq[db[199]]]=cp[df];end else do return cp[de]();end;end else do if not(dd<e)then if not(dd~=66)then cp[de]=(cp[cy]%cq[df]);else local c,e do e=de end c={}do for g=1,#cu do local h h=cu[g]for g=0,#h do local i,k,l k=h[g]i=k[1]l=k[2]if(i==cp and l>=e)then do c[l]=i[l];end k[b]=c;end;end;end;end end else local b,c,e c=de do e={cp[c](cc(cp,c+1,cx))}end do b=0 end do for g=c,df do b=(b+1);cp[g]=e[b];end end end end end end else if not(dd<58)then if not(db[136]>60)then if not(dd>58)then if((cp[de]<cp[df]))then ct=cy;end;else do if(dd<60)then local b,c,e do b=de end e=cp[b]c=cp[(b+2)]if((c>0))then do if((e>cp[b+1]))then ct=cy;else cp[(b+3)]=e;end end elseif((e<cp[b+1]))then do ct=cy;end else cp[(b+3)]=e;end else cp[de]=(cp[cy]+cq[db[60]]);end end end else if not(dd>62)then if(dd<62)then cp[de][cq[cy]]=cq[df];else do cp[de]=bj(cm[cy],nil,d);end end else if(dd<64)then cp[db[32]]=(function()cp[de]=bj(cm[cr],nil,d);end)else cp[de]=-cp[cy];end end end else if not(dd<55)then if not(dd<56)then if(dd<57)then do if((cq[de]<cp[df]))then ct=cy;end;end else cp[de]=(cp[db[199]]^cp[db[60]]);end else bg[de]=cp[cr]end else if not(dd<v)then if(db[136]>53)then cp[de]=bg[cr]else if(not(cp[de]==cq[db[60]]))then ct=cy;end;end else local b,c c=db[149]do b=cy end do for e=c,b do cp[e]=cw[(e-c)];end;end end end end end else if not(dd<91)then if not(dd<98)then if not(dd>100)then if not(dd>98)then co[ct]={[51]=0,[60]=1,[136]=db[136]-7,[199]=191,[149]=8};ct=(ct-1);else if 99==db[136]then local b b=de cp[b]=cp[b](cc(cp,b+1,cy));else local b b=db[149]do cp[b](cc(cp,(b+1),db[199]))end end end else if not(dd>102)then if(dd>101)then local b,c c=de do b={}end if(#cu>0)then for e=1,#cu do local g g=cu[e]for e=0,#g do local h,i,k i=g[e]h=i[1]do k=i[2]end do while h==cp and k>=0 do b[k]=h[k]i[1]=b break end end end end end return cc(cp,c,cx);else co[ct]=bq[da];ct=cy;end else if(dd>103)then else cp[de]=d[cq[cy]][cq[db[60]]];end end end else if not(dd>93)then do if not(dd<92)then if(dd>92)then cp[de]=(cp[cy]/cp[df]);else do ct=((cq[de]<cp[df])and cy or ct)end end else if cp[de]then ct=db[199];end;end end else if not(dd>95)then if not(dd~=94)then cx=db[db[j]];else cp[de]=d[cq[cy]];end else if(dd>96)then do while((cp[de]==cp[df]))do ct=cy;break end end else cp[de]=(cp[cy]/cq[df]);end end end end else do if not(dd>83)then do if not(dd<81)then if not(dd<82)then if(db[136]<83)then do cp[de]=cp[cy];end else cp[de]=(cp[cy]%cp[df]);end else do cp[de]=(cp[cy]*cq[df]);end end else if not(dd<79)then if 79==db[136]then do if(cp[db[60]]~=cp[de])then ct=cy;end;end else d=cp[db[de]]end else local b,c c,b=cl(...)for b=1,db[149]do cp[(b-1)]=c[b]end end end end else if not(dd>86)then if not(dd>84)then if not cp[df]then do cp[de]=cp[df];end do ct=cy;end end;else if(dd>85)then cp={};for b=0,cs do if(b<cn)then cp[b]=a[(b+1)];else break end;end;else if not cp[db[149]]then ct=cy;end;end end else if not(dd>88)then do if not(dd~=87)then local a a=de cp[a]=cp[a](cc(cp,a+1,cx));else do bg=cp end end end else do if 89==dd then cp[de]=cq[cy]else if de then de=false;df=cy;ct=(ct-1);else ct=(ct+cy+df);end end end end end end end end end end end ct=(ct+1);end;end;end else if y<1535 then y=1539 return bj(bc(bi()),{},bi())();else x=65;end end end else if y<=1253 then if y>1239 then y=1291 do cj=function()local a,b,c,d,e,g,h,i=97,78,26,51,16,84,19,13,73,74,23,66,14,32,94,12,88 while a~=48 do if b<=185 then if b<=98 then if b<96 then c,d,e,g,h,i=nil b=98 else e=bt()b=139 end else if b>=167 then if b<177 then if((e==0 and d==0))then return 0 end b=185 else b=212 h=((-1)^bz(31,d,1))end else d=bt()b=167 end end else if b<=275 then if b<=212 then i=bz(20,d,11)b=251 else if b>257 then b=306 do g=1 end else c=(bz(0,d,20)*4294967296+e)b=275 end end else if b>=337 then if b>346 then a=48;else b=379 return(h*(2^(i-1023))*(c/bo+g))end else b=337 if 0==i then do if not(c==0)then i=1 g=0 else return(h*0)end end elseif 2047~=i then else if not(c~=0)then do do return(h*(0/0))end end else return(h*(1/0))end end end end end end end end else y=1253 bh=function()local a,b b,a=bw(ce,bv,(bv+2))bv=(bv+2);return((a*256)+b);end end else if y<=1291 then do bp=function(a,a,a,a)local a,b,c,d=61,68,11,46,53,79,86,35,46,93,42,31 while a~=33 do if b>=165 then if b>=180 then if b<214 then b=218 return d;else a=33;end else b=180 bv=(bv+c);end else if b<=68 then c,d=nil b=102 else if b>104 then d=ce:sub(bv,(bv+c-1))b=165 else c=bt()b=125 end end end end end end y=1337 else if y<1367 then do cl=function(...)return{...},br('#',...)end end y=1373 else y=1409 bq={}end end end end end else if y>=444 then if y>=624 then if y<=709 then if y<=624 then cc=(unpack or table.unpack)y=671 else if y>678 then cd={}y=755 else y=709 ch=tonumber end end else if y>=787 then if y<814 then ce=bm('','..',function(a,b,b,b)return cd[ch(a,16)]end)y=816 else y=841 do ba={{r,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,q,0,1,6,7,f,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,u,5,4,11,10,9,8,15,14,13,12,},{4,5,p,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,n,10,11,8,9,},{7,6,5,4,3,s,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,t,3,2,1,0,},nil,nil,nil}end end else y=787 for a=0,255 do cd[a]=bu(a);end end end else if y<=464 then if y<458 then do br=select end y=464 else y=503 ca=type end else if y>=545 then if y<574 then y=577 do cb=math.abs end else bb=math.floor y=624 end else y=545 be=(function(a,b,b)if not(ca(a)~='number')then return true else return false end end)end end end else if y>=245 then if y>=312 then if y>=354 then if y<386 then y=395 do bi=(getfenv or function()return _ENV end)end else do cg=setmetatable end y=444 end else y=354 do by=math.ldexp end end else if y>=262 then if y>264 then y=312 z=table.insert else bk=table.concat y=293 end else y=262 do ci=string.rep end end end else if y<=103 then if y<98 then z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=nil y=103 else y=126 bw=string.byte end else if y<=126 then do bu=string.char end y=173 else if y>178 then y=245 do bm=string.gsub end else bf=string.sub y=207 end end end end end end end end)(1,1,16,199,66,4,0,60,13,149,136,199,1,13,2,6,3,0,2,4,6,53,149)
